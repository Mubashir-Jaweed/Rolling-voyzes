import 'dart:math';

import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:get/get.dart';

class AuthService {
  AuthService._privateConstructor();
  static final AuthService instance = AuthService._privateConstructor();

  final FirebaseAuth _auth = FirebaseAuth.instance;

  // Sign in anonymously
  Future<User?> signInAnonymously() async {
    try {
      UserCredential userCredential = await _auth.signInAnonymously();
      return userCredential.user;
    } catch (e) {
      print("Error Failed to sign in anonymously:");
      return null;
    }
  }

  // Sign out the current user
  Future<void> signOut() async {
    try {
      await _auth.signOut();
      Get.snackbar("Success", "You have been signed out.");
    } catch (e) {
      Get.snackbar("Error", "Failed to sign out: $e");
    }
  }

  // Get current user UID
  String? getCurrentUserUid() {
    User? user = _auth.currentUser;
    if (user != null) {
      return user.uid;
    } else {
      return null;
    }
  }

  Future<String?> login(String email, String password) async {
    try {
      await FirebaseAuth.instance.signInWithEmailAndPassword(
        email: email,
        password: password,
      );
      return null; // success
    } on FirebaseAuthException catch (e) {
      return e.message;
    }
  }

  Future<String?> signUp(String email, String password) async {
    try {
      UserCredential userCredential =
          await FirebaseAuth.instance.createUserWithEmailAndPassword(
        email: email,
        password: password,
      );

      User? user = userCredential.user;

      if (user != null) {
        await saveUserTofirebase(user);
      }
      return null; // success
    } on FirebaseAuthException catch (e) {
      return e.message;
    }
  }

  Future<void> saveUserTofirebase(User user) async {
    final random = Random();

    List<String> usernames = [
  "wired4wealth",
  "stimmyseason",
  "thirsty4money",
  "slushfundszn",
  "notmycrushlol",
  "leftonreadagain",
  "caughtin4kagain",
  "accidentallyhot",
  "urfavnpc",
  "oatmilkenthusiast",
  "goblinhoursactive",
  "facetimeinhell",
  "legallyasleep",
  "wifiinsecure",
  "beansinmypocket",
  "icedcoffeelover99",
  "unhingedandthriving",
  "okaybutno",
  "schoolonmute",
  "talkingsandwich",
  "forgotmybrain",
  "myratnameiskyle",
  "aimusernamevibes",
  "mytoestalkedme",
  "spilledmythoughts",
  "bluetoothbetrayal",
  "chargerstealer",
  "2turnt2text",
  "loadingforever",
  "sendmememesplz",
  "bananainmybag",
  "funkyfridgeenergy",
  "crustyemojiuser",
  "whoateallmyfries",
  "passwordis1234",
  "iusedtothink",
  "actualsockpuppet",
  "sleepysincebirth",
  "yehyeboy",
  "thatssuspicious",
  "fineillsayit",
  "chickennugg4life",
  "mattressontheroof",
  "ughhherewego",
  "walkingsideways",
  "icedoutcrocs",
  "momsayshi",
  "notfound404",
  "ijustwokeupfr",
  "ididathinglol",
  "uupquestionmark",
  "coffeefirstalways",
  "ohwormreal",
  "poopinmylambo",
  "ghostedmyself",
  "lmaowhatnow",
  "yeetmymeat",
  "slayednleft",
  "crustybucket",
  "inmydeluluerafrn",
  "microwavefriend",
  "myfinalbraincell",
  "autotunemysoul",
  "screamingspaghetti",
  "wifioutagain",
  "literallywhosasked",
  "weirdcorebabe",
  "snaccidentshappen",
  "cantspellrestaurant",
  "3braincellz",
  "urtoxicbestie",
  "mycatjudgeme",
  "sleepdeprivedgf",
  "textingmyexagain",
  "noitsmayonnaise",
  "invalidsimcard",
  "downloadedavirus",
  "smellslikesocks",
  "wheresmyleftshoe",
  "clouddateme",
  "thisaintfacebook",
  "iwasntreadyfr",
  "softboiledegg",
  "toecheesetiktok",
  "screamcheesecake",
  "gumonmysticker",
  "toe2toecombat",
  "bucketinhisbag",
  "notacultpromise",
  "mydogvapes",
  "fishwithaplan",
  "deepfriedreality",
  "accidentallyalive",
  "glitteroncereal",
  "feralinstincts",
  "basedoncorn",
  "sneezeforclout",
  "goblincertified",
  "shrimpatlaw",
  "frogchairfan",
  "sentfrommyfridge",
  "glitchintheratio",
  "vibinginhotdogcostume"
];
   
    final userRef = FirebaseFirestore.instance.collection('users');
    await userRef.doc(user.uid).set({
      'uid': user.uid,
      'name': user.email!.split('@')[0],
      'email': user.email,
      "uniqueId":usernames[random.nextInt(usernames.length)],
      'location':"",
      "onlineAt":"",
      "isOnline":true,
      'avatar':'',
      'relations':[],
    });
  }


  String _generateHumanReadableId() {
  final random = Random();
  
    // Word banks
    final adjectives = [
      'paid',
      'cool',
      'smart',
      'quick',
      'fast',
      'super',
      'mega',
      'turnt',
      'epic',
      'sweet',
      'lucky',
      'happy',
      'dope',
      'lit',
      'savage',
      'fire',
      'sick',
      'rad',
      'chill',
      'fly',
      'fresh',
      'wicked',
      'boss',
      'snazzy',
      'crisp',
      'slick',
      'prime',
      'phat',
      'gucci',
      'aesthetic',
      'vibey',
      'legendary',
      'goated',
      'based',
      'elite',
      'bougie',
      'extra',
      'glow',
      'viral',
      'flashy',
      'snappy',
      'jazzy',
      'swanky',
      'pog',
      'bussin',
      'clutch',
      'flex',
      'glitzy',
      'hype',
      'iconic',
      'juiced',
      'killer',
      'lush',
      'mint',
      'nifty',
      'plush',
      'quirky',
      'rare',
      'shiny',
      'tasty',
      'uber',
      'vivid',
      'winning',
      'yummy',
      'zesty',
      'amped',
      'beastly',
      'cosmic',
      'dazzling',
      'electric',
      'fierce',
      'golden',
      'heavenly',
      'insta',
      'jolly',
      'kooky',
      'luminous',
      'magic',
      'neon',
      'optimal',
      'peachy',
      'quantum',
      'radiant',
      'stellar',
      'titanic',
      'ultimate',
      'vortex',
      'wavy',
      'xtra',
      'youthful',
      'zen',
      'alpha',
      'bold',
      'crispy',
      'dynamic',
      'exotic',
      'fabulous',
      'groovy',
      'honest',
      'infamous',
      'jubilant',
      'keen',
      'luxe',
      'mystic',
      'nova',
      'oasis',
      'punchy',
      'quantum',
      'rowdy',
      'sassy',
      'tactical',
      'unreal',
      'vibing',
      'wild',
      'xtreme',
      'yolo',
      'zany',
      'atomic',
      'blazing',
      'charged',
      'divine',
      'ethereal',
      'flawless',
      'glorious',
      'hyper',
      'immense',
      'jovial',
      'knightly',
      'lively',
      'majestic',
      'noble',
      'outrageous',
      'priceless',
      'quicksilver',
      'royal',
      'sleek',
      'thrilling',
      'unmatched',
      'valiant',
      'wonder',
      'xenial',
      'yare',
      'zealous',
      'baller',
      'cunning',
      'daring',
      'effortless',
      'fearless',
      'godly',
      'heroic',
      'incredible',
      'jumpy',
      'kaleido',
      'lucid',
      'magnetic',
      'notorious',
      'onpoint',
      'psyched',
      'quality',
      'rebel',
      'smooth',
      'top',
      'unbreakable',
      'vibrant',
      'whimsical',
      'xenon',
      'youth',
      'zappy',
      'ace',
      'bossy',
      'celestial',
      'dreamy',
      'epic',
      'fantastic',
      'grand',
      'high',
      'infinity',
      'jolly',
      'keen',
      'lucky',
      'mighty',
      'nice',
      'oceanic',
      'perfect',
      'quick',
      'rad',
      'supreme',
      'true',
      'ultra',
      'vivid',
      'wise',
      'xtra',
      'young',
      'zesty'
    ];
  
    final nouns = [
      'text',
      'code',
      'game',
      'life',
      'work',
      'cash',
      'time',
      'obtain',
      'samantha',
      'jordan',
      'taylor',
      'alex',
      'app',
      'bot',
      'cloud',
      'data',
      'AI',
      'NFT',
      'meme',
      'emoji',
      'hashtag',
      'algorithm',
      'byte',
      'crypto',
      'server',
      'pixel',
      'VR',
      'metaverse',
      'blockchain',
      'hack',
      'stream',
      'interface',
      'vibe',
      'mood',
      'flex',
      'hustle',
      'grind',
      'clout',
      'drip',
      'swag',
      'wave',
      'aura',
      'energy',
      'chill',
      'luxe',
      'glow',
      'flame',
      'spark',
      'rush',
      'dream',
      'vision',
      'quest',
      'hype',
      'trend',
      'moment',
      'edge',
      'peak',
      'pog',
      'GG',
      'noob',
      'pro',
      'raid',
      'loot',
      'spawn',
      'mod',
      'skin',
      'quest',
      'boss',
      'nerf',
      'buff',
      'patch',
      'ping',
      'lag',
      'FPS',
      'RPG',
      'squad',
      'clutch',
      'bag',
      'coin',
      'stack',
      'bank',
      'profit',
      'hustle',
      'bucks',
      'funds',
      'deal',
      'hustle',
      'royalty',
      'fortune',
      'elite',
      'luxury',
      'ceo',
      'ace',
      'bro',
      'chief',
      'dude',
      'king',
      'queen',
      'legend',
      'hero',
      'villian',
      'guru',
      'wizard',
      'savage',
      'goat',
      'rookie',
      'phantom',
      'shadow',
      'nova',
      'blaze',
      'rex',
      'zen',
      'echo',
      'nova',
      'orbit',
      'pulse',
      'quantum',
      'rhythm',
      'sonic',
      'titan',
      'vortex',
      'zenith',
      'infinity',
      'odyssey',
      'paradox',
      'phoenix',
      'relic',
      'sigma',
      'unity',
      'void',
      'warp',
      'xeno',
      'banana',
      'cookie',
      'dragon',
      'emo',
      'fizz',
      'glitch',
      'jelly',
      'karma',
      'llama',
      'mocha',
      'ninja',
      'panda',
      'quokka',
      'sushi',
      'taco',
      'unicorn',
      'voltage',
      'waffle',
      'yeti',
      'zombie'
    ];
  
    final numbers = [
      '2',
      '4',
      '7',
      '10',
      '20',
      '99',
      '100',
      '42',
      '21',
      '77',
      '9',
      '1',
      '3',
      '4',
      '65',
      '8'
    ];
  
  final patterns = [
    '${adjectives[random.nextInt(adjectives.length)]}${nouns[random.nextInt(nouns.length)]}${numbers[random.nextInt(numbers.length)]}',
    '${numbers[random.nextInt(numbers.length)]}${adjectives[random.nextInt(adjectives.length)]}${nouns[random.nextInt(nouns.length)]}',
    '${nouns[random.nextInt(nouns.length)]}${numbers[random.nextInt(numbers.length)]}',
    '${adjectives[random.nextInt(adjectives.length)]}${numbers[random.nextInt(numbers.length)]}${nouns[random.nextInt(nouns.length)]}'
  ];
  
  // Select random pattern and make lowercase
  return patterns[random.nextInt(patterns.length)].toLowerCase();
}
}
